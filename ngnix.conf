events {
    worker_connections 1024;
}
http {
    resolver 127.0.0.11 ipv6=off;

    upstream auth-service {
        server auth-server:8090;
    }
    upstream user-profile-service {
        server user-profile:5000;
    }
    upstream user-post-service {
        server post-server:8070;
    }
    upstream notification-service {
        server notifications:8091;
    }
    upstream messages-service {
        server messages:8092;
    }

    server {
        listen 8080;

        location /validate-token {
            internal;
            proxy_pass_request_body off;
            proxy_set_header        Content-Length "";
            proxy_set_header        Host $host;
            proxy_set_header        X-Original-URI $request_uri;

            proxy_pass http://auth-service/api/auth/is-token-valid;
        }

        location /api/auth {
            proxy_pass http://auth-service;
        }

#=========================== user-profile =======================
       
        #All routes with prefix api are protected
        location /api/profile/ {
           if ( $http_authorization = "" ) {
              return 403;
           }
           try_files _ @send_auth_req;
        }
        #all routes without api prefix are public
        #if route is token is present auth_request is sent
         location /profile/ {
           error_page 418 = @send_auth_req;
           if ( $http_authorization != "" ) {
                return 418;
           }
           proxy_set_header     X-Real-IP $remote_addr;
           proxy_set_header     Host $host;

           proxy_pass http://user-profile-service;
        }
        location @send_auth_req {
           auth_request         /validate-token;
           auth_request_set     $user $sent_http_user;
           proxy_set_header     User $user;
           proxy_set_header     X-Real-IP $remote_addr;
           proxy_set_header     Host $host;

           proxy_pass http://user-profile-service;
       }
        
#=========================== user-post =======================
        #All routes with prefix api are protected
        location /api/post/ {
           if ( $http_authorization = "" ) {
              return 403;
           }
           try_files _ @send_auth_req_post;
        }

        #all routes without api prefix are public
        #if route is token is present auth_request is sent
         location /post/ {
           error_page 418 = @send_auth_req_post;
           if ( $http_authorization != "" ) {
                return 418;
           }
           proxy_set_header     X-Real-IP $remote_addr;
           proxy_set_header     Host $host;

           proxy_pass http://user-post-service;
        }
        location @send_auth_req_post {
           auth_request         /validate-token;
           auth_request_set     $user $sent_http_user;
           proxy_set_header     User $user;
           proxy_set_header     X-Real-IP $remote_addr;
           proxy_set_header     Host $host;

           proxy_pass http://user-post-service;
       }
#=========================== notifications =======================
        #All routes with prefix api are protected
        location /api/notifications/ {
           if ( $http_authorization = "" ) {
              return 403;
           }
           try_files _ @send_auth_req_notif;
        }

        location @send_auth_req_notif {
           auth_request         /validate-token;
           auth_request_set     $user $sent_http_user;
           proxy_set_header     User $user;
           proxy_set_header     X-Real-IP $remote_addr;
           proxy_set_header     Host $host;

           proxy_pass http://notification-service;
       }
       #sockets
        location /notification/ {
            proxy_pass http://notification-service;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }
#=========================== messages =======================
        location /messages/ {
            proxy_pass http://messages-service;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }


}

}